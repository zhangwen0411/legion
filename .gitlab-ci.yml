# Variables:
#  - Global:
variables:
  LLVM_CONFIG: "llvm-config-3.5"
  REALM_SYNTHETIC_CORE_MAP: "" # Disable Realm thread pinning.

#  - Local:
.gcc49: &gcc49
  CXX: "g++-4.9"
.clang35: &clang35
  CXX: "clang++-3.5"
.debug: &debug
  DEBUG: "1"
.release: &release
  DEBUG: "0"
.cxx98_normal: &cxx98_normal
  CC_FLAGS: "-std=c++98"
.cxx98_checks: &cxx98_checks
  CC_FLAGS: "-std=c++98 -DPRIVILEGE_CHECKS -DBOUNDS_CHECKS"
.cxx98_spy: &cxx98_spy
  CC_FLAGS: "-std=c++98 -DLEGION_SPY"
  TEST_SPY: "1"
.cxx11_normal: &cxx11_normal
  CC_FLAGS: "-std=c++11"

# This set of commands will run before each job.
before_script:
  - uname -a
  - export THREADS=$(nproc --all)
  - |
    if [[ "$USE_GASNET" -eq 1 ]]; then
      export CONDUIT=mpi
      export GASNET_ROOT="$PWD/gasnet/release"
      export LAUNCHER="mpirun -n 2 -x TERRA_PATH -x INCLUDE_PATH -x LD_LIBRARY_PATH -x LG_RT_DIR"
      unset WARN_AS_ERROR
      git clone https://github.com/StanfordLegion/gasnet.git gasnet
      pushd gasnet
      make -j$THREADS
      popd
    fi

# Define Docker image to use.
.image: &image
  image: stanfordlegion/gitlab-ci # i.e. https://hub.docker.com/r/stanfordlegion/gitlab-ci/

# Define tests to run.
.tests: &tests
  script:
    - ./language/travis.py
    - |
      make -s -C tutorial/00_hello_world LG_RT_DIR=../../runtime clean
      make -s -C tutorial/00_hello_world LG_RT_DIR=../../runtime -j$THREADS
      tutorial/00_hello_world/hello_world -logfile out_%.log
      make -s -C tutorial/01_tasks_and_futures LG_RT_DIR=../../runtime
      tutorial/01_tasks_and_futures/tasks_and_futures -logfile out_%.log
      make -s -C tutorial/02_index_tasks LG_RT_DIR=../../runtime
      tutorial/02_index_tasks/index_tasks -logfile out_%.log
      make -s -C tutorial/03_global_vars LG_RT_DIR=../../runtime
      tutorial/03_global_vars/global_vars -logfile out_%.log
      make -s -C tutorial/04_logical_regions LG_RT_DIR=../../runtime
      tutorial/04_logical_regions/logical_regions -logfile out_%.log
      make -s -C tutorial/05_physical_regions LG_RT_DIR=../../runtime
      tutorial/05_physical_regions/physical_regions -logfile out_%.log
      make -s -C tutorial/06_privileges LG_RT_DIR=../../runtime
      tutorial/06_privileges/privileges -logfile out_%.log
      make -s -C tutorial/07_partitioning LG_RT_DIR=../../runtime
      tutorial/07_partitioning/partitioning -logfile out_%.log
      make -s -C tutorial/08_multiple_partitions LG_RT_DIR=../../runtime
      tutorial/08_multiple_partitions/multiple_partitions -logfile out_%.log
      make -s -C tutorial/09_custom_mapper LG_RT_DIR=../../runtime
      tutorial/09_custom_mapper/custom_mapper -logfile out_%.log
    - |
      make -s -C examples/full_circuit LG_RT_DIR=../../runtime
      examples/full_circuit/ckt_sim -logfile out_%.log
      make -s -C examples/full_ghost LG_RT_DIR=../../runtime
      examples/full_ghost/ghost -ll:cpu 4 -logfile out_%.log
    - |
      if [[ "$DEBUG" -eq 0 ]]; then
        make -s -C test/realm LG_RT_DIR=../../runtime DEBUG=0 SHARED_LOWLEVEL=0 USE_CUDA=0 USE_GASNET=0 clean
        make -s -C test/realm LG_RT_DIR=../../runtime DEBUG=0 SHARED_LOWLEVEL=0 USE_CUDA=0 USE_GASNET=0 run_all
      fi
    - |
      if [[ "$DEBUG" -eq 0 ]]; then
        make -s -C test/performance/realm LG_RT_DIR=../../../runtime SHARED_LOWLEVEL=0 clean_all
        make -s -C test/performance/realm LG_RT_DIR=../../../runtime SHARED_LOWLEVEL=0 run_all
      fi

# Define the list of jobs to run.
#  - GCC
gcc_cxx98_release:
  <<: [*image, *tests]
  variables:
    <<: [*gcc49, *release, *cxx98_normal]
gcc_cxx98_debug_checks:
  <<: [*image, *tests]
  variables:
    <<: [*gcc49, *debug, *cxx98_checks]
gcc_cxx98_debug_spy:
  <<: [*image, *tests]
  variables:
    <<: [*gcc49, *debug, *cxx98_spy]
gcc_cxx11_release:
  <<: [*image, *tests]
  variables:
    <<: [*gcc49, *release, *cxx11_normal]

# - Clang
clang_cxx98_release:
  <<: [*image, *tests]
  variables:
    <<: [*clang35, *release, *cxx98_normal]
clang_cxx98_debug_checks:
  <<: [*image, *tests]
  variables:
    <<: [*clang35, *debug, *cxx98_checks]
clang_cxx98_debug_spy:
  <<: [*image, *tests]
  variables:
    <<: [*clang35, *debug, *cxx98_spy]
clang_cxx11_release:
  <<: [*image, *tests]
  variables:
    <<: [*clang35, *release, *cxx11_normal]
